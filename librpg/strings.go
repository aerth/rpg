// Code generated by "stringer -output librpg/strings.go -type ActionType,EntityState,EntityType,ItemType,animState,StatusEffect ./librpg/"; DO NOT EDIT.

package rpg

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Talk-0]
	_ = x[Slash-1]
	_ = x[ManaStorm-2]
	_ = x[MagicBullet-3]
	_ = x[Arrow-4]
}

const _ActionType_name = "TalkSlashManaStormMagicBulletArrow"

var _ActionType_index = [...]uint8{0, 4, 9, 18, 29, 34}

func (i ActionType) String() string {
	if i < 0 || i >= ActionType(len(_ActionType_index)-1) {
		return "ActionType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ActionType_name[_ActionType_index[i]:_ActionType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[S_IDLE-0]
	_ = x[S_RUN-1]
	_ = x[S_WANDER-2]
	_ = x[S_GUARD-3]
	_ = x[S_SUSPECT-4]
	_ = x[S_HUNT-5]
	_ = x[S_DEAD-6]
}

const _EntityState_name = "S_IDLES_RUNS_WANDERS_GUARDS_SUSPECTS_HUNTS_DEAD"

var _EntityState_index = [...]uint8{0, 6, 11, 19, 26, 35, 41, 47}

func (i EntityState) String() string {
	if i < 0 || i >= EntityState(len(_EntityState_index)-1) {
		return "EntityState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _EntityState_name[_EntityState_index[i]:_EntityState_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[SKELETON-0]
	_ = x[SKELETON_GUARD-1]
	_ = x[DOBJECT-2]
}

const _EntityType_name = "SKELETONSKELETON_GUARDDOBJECT"

var _EntityType_index = [...]uint8{0, 8, 22, 29}

func (i EntityType) String() string {
	if i < 0 || i >= EntityType(len(_EntityType_index)-1) {
		return "EntityType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _EntityType_name[_EntityType_index[i]:_EntityType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[GOLD-1]
	_ = x[POTION-2]
	_ = x[FOOD-3]
	_ = x[WEAPON-4]
	_ = x[ARMOR-5]
	_ = x[SPECIAL-6]
}

const _ItemType_name = "GOLDPOTIONFOODWEAPONARMORSPECIAL"

var _ItemType_index = [...]uint8{0, 4, 10, 14, 20, 25, 32}

func (i ItemType) String() string {
	i -= 1
	if i < 0 || i >= ItemType(len(_ItemType_index)-1) {
		return "ItemType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ItemType_name[_ItemType_index[i]:_ItemType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Idle-0]
	_ = x[Running-1]
}

const _animState_name = "IdleRunning"

var _animState_index = [...]uint8{0, 4, 11}

func (i animState) String() string {
	if i < 0 || i >= animState(len(_animState_index)-1) {
		return "animState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _animState_name[_animState_index[i]:_animState_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[E_POISON-1]
	_ = x[E_PARALYSIS-2]
	_ = x[E_FROZEN-3]
	_ = x[E_BURNED-4]
	_ = x[E_SLEEP-5]
	_ = x[E_CONFUSED-6]
	_ = x[E_TIRED-7]
	_ = x[E_DRUNK-8]
}

const _StatusEffect_name = "E_POISONE_PARALYSISE_FROZENE_BURNEDE_SLEEPE_CONFUSEDE_TIREDE_DRUNK"

var _StatusEffect_index = [...]uint8{0, 8, 19, 27, 35, 42, 52, 59, 66}

func (i StatusEffect) String() string {
	i -= 1
	if i < 0 || i >= StatusEffect(len(_StatusEffect_index)-1) {
		return "StatusEffect(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _StatusEffect_name[_StatusEffect_index[i]:_StatusEffect_index[i+1]]
}
